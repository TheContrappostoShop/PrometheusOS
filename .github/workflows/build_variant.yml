on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string
      image_name:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Remove unnecessary files
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install coreutils p7zip-full qemu-user-static
    - name: Checkout CustomPiOS
      uses: actions/checkout@v4
      with:
        repository: 'guysoft/CustomPiOS'
        path: CustomPiOS
        ref: '70f1ae537a02195f1ba4f0a51ed381628e575c66'

    - name: Checkout Project Repository
      uses: actions/checkout@v4
      with:
        path: repository
        submodules: true

    - name: Download base image
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.image_name }}
        path: repository/src/image

    - name: Update CustomPiOS Paths
      run: |
        cd repository/src
        ../../CustomPiOS/src/update-custompios-paths

    - name: Build Image
      id: build
      run: |
        sudo modprobe loop
        cd repository/src
        sudo bash -x ./build_dist ${{ inputs.variant }}

    - name: Compress output
      id: compress
      run: |
        source repository/src/config
        NOW=$(date +"%Y-%m-%d-%H%M")
        IMAGE=$NOW-prometheusos-${{ inputs.variant }}-$DIST_VERSION
        cp repository/src/workspace-${{ inputs.variant }}/*.img $IMAGE.img
        tar -cJf $IMAGE.img.xz  $IMAGE.img
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
        echo "dist_version=$DIST_VERSION" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.compress.outputs.image }}
        path: ${{ steps.compress.outputs.image }}.img

    - name: Github Release
      uses: ncipollo/release-action@v1
      if: github.ref == 'refs/heads/main'
      with:
        artifacts: ${{ steps.compress.outputs.image }}.img.xz
        tag: v${{ steps.compress.outputs.dist_version }}
        skipIfReleaseExists: true
        omitBodyDuringUpdate: true
        draft: true
        replacesArtifacts: false
        generateReleaseNotes: true
        commit: ${{github.sha}}
        allowUpdates: true
        updateOnlyUnreleased: true

